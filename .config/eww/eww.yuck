(defwindow custom-bar
  :monitor 0
  :stacking "bottom"
  :exclusive true
  :geometry (geometry
              :x "0px"
              :y "0px"
              :width "100%"
              :height "0%"
              :anchor "bottom center"
              )
  (bar-area)
  )

(defpoll datetime
  :interval "1s"
  :initial ""
  `date +'{"time":"%r","date":"%a, %b %d"}'`
  )

(defpoll gpumon
  :interval "5s"
  :initial ""
  `echo $(~/scripts/gpumon-waybar.sh)`
  )

(defpoll weather
  :interval "30s"
  `echo $(python ~/scripts/weather/weather.py)`
  )

(defpoll userinfo
  :interval "1s"
  `echo "$USER@$(uname -n)"`
  )

(defwidget bar-area []
  (centerbox :orientation "h"
    :class "bar-area"
    (bar-widgets-left)
    (bar-widgets-center)
    (bar-widgets-right)
    )
  )

(defwidget bar-widgets-left []
  (box
    :class "bar-widgets-left bar-widgets"
    :halign "start"
    :spacing 20
    :space-evenly false
    (label :text "${userinfo}")
    (logout)
    )
  )

(defwidget bar-widgets-center []
  (box
    :class "bar-widgets-center bar-widgets"
    :halign "center"
    :spacing 20
    :space-evenly false
    (gpu)
    (cpu)
    (memory)
    )
  )

(defwidget bar-widgets-right []
  (box
    :class "bar-widgets-right bar-widgets"
    :halign "end"
    :spacing 20
    :space-evenly false
    (weather)
    (volume)
    (tray)
    (label :text "${datetime.date}")
    (label :text "${datetime.time}")
    )
  )

(defwidget gpu []
  (box
    (label :text "GPU: ${gpumon.text}")
    )
  )

(defwidget cpu []
  (box
    (label :text "CPU: ${round(EWW_CPU.avg, 0)}% | ${round(jq(EWW_CPU.cores, '[.[] | .freq] | add') / arraylength(EWW_CPU.cores) * 0.001, 2)} GHz | ${round(EWW_TEMPS.K10TEMP_TCTL, 0)}°C")
    )
  )

(defwidget memory []
  (box
    (label :text "MEM: ${round(EWW_RAM.used_mem_perc, 0)}%")
    )
  )

(defwidget weather []
  (box
    (label :text "${weather.text}")
    )
  )

(defwidget volume []
  (box
    (label :text "VOL")
    )
  )

(defwidget tray []
  (systray
    :spacing 14
    )
  )

(defwidget logout []
  (button
    :onclick "pidof wofi || ~/scripts/wofi-logout.sh"
    (label :text "⏻")
    )
  )
